{"ast":null,"code":"import _regeneratorRuntime from\"/Users/leedy2491/Document/Develope/BootCampLetter/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/leedy2491/Document/Develope/BootCampLetter/front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React from'react';import{Button,Form,Input}from\"antd\";import axios from'axios';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Setting(){var onConfirm=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(values){var unit;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:unit={unit:values.unit};axios.post('/api/setting',unit).then(function(response){if(response.data.success){alert(\"유닛 이름이 세팅되었습니다.\");window.location.reload();}else{alert('실패햐였습니다.');}});case 2:case\"end\":return _context.stop();}}},_callee);}));return function onConfirm(_x){return _ref.apply(this,arguments);};}();var onConfirmFailed=function onConfirmFailed(errorInfo){console.log('Failed:',errorInfo);alert(\"편지 보내기에 실패하셨습니다. 잠시후 다시 시도해주세요.\");};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Form,{className:\"form-container\",name:\"basic\",labelCol:{span:5},wrapperCol:{span:16},initialValues:{remember:true},onFinish:onConfirm,onFinishFailed:onConfirmFailed,children:[/*#__PURE__*/_jsx(Form.Item,{label:\"UNIT_NAME\",name:\"unit\",rules:[{required:true,message:'입영부대를 입력해주세요!'}],children:/*#__PURE__*/_jsx(Input,{placeholder:\"\\uC785\\uC601\\uBD80\\uB300\\uB97C \\uC368\\uC8FC\\uC138\\uC694.\",allowClear:true})}),/*#__PURE__*/_jsx(Form.Item,{wrapperCol:{xs:{offset:0,span:16},lg:{offset:5,span:16}},children:/*#__PURE__*/_jsx(Button,{type:\"primary\",shape:\"round\",htmlType:\"submit\",children:\"\\uC800\\uC7A5\\uD558\\uAE30\"})})]})});}","map":{"version":3,"sources":["/Users/leedy2491/Document/Develope/BootCampLetter/front/src/components/views/Setting/Setting.tsx"],"names":["React","Button","Form","Input","axios","Setting","onConfirm","values","unit","post","then","response","data","success","alert","window","location","reload","onConfirmFailed","errorInfo","console","log","span","remember","required","message","xs","offset","lg"],"mappings":"yVAAA,MAAOA,CAAAA,KAAP,KAAoC,OAApC,CACA,OAAQC,MAAR,CAAgBC,IAAhB,CAAsBC,KAAtB,KAAkC,MAAlC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,C,wFAEA,cAAe,SAASC,CAAAA,OAAT,EAAiC,CAC5C,GAAMC,CAAAA,SAAS,0FAAG,iBAAOC,MAAP,2HACVC,IADU,CACH,CACPA,IAAI,CAAED,MAAM,CAACC,IADN,CADG,CAIdJ,KAAK,CAACK,IAAN,CAAW,cAAX,CAA2BD,IAA3B,EACKE,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,CAA2B,CACvBC,KAAK,CAAC,iBAAD,CAAL,CACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,GACH,CAHD,IAGO,CACHH,KAAK,CAAC,UAAD,CAAL,CACH,CACJ,CARL,EAJc,sDAAH,kBAATR,CAAAA,SAAS,4CAAf,CAeA,GAAMY,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,SAAD,CAAoB,CACxCC,OAAO,CAACC,GAAR,CAAY,SAAZ,CAAuBF,SAAvB,EACAL,KAAK,CAAC,iCAAD,CAAL,CACH,CAHD,CAKA,mBACI,kCACI,MAAC,IAAD,EACI,SAAS,CAAC,gBADd,CAEI,IAAI,CAAC,OAFT,CAGI,QAAQ,CAAE,CAAEQ,IAAI,CAAE,CAAR,CAHd,CAII,UAAU,CAAE,CAAEA,IAAI,CAAE,EAAR,CAJhB,CAKI,aAAa,CAAE,CAAEC,QAAQ,CAAE,IAAZ,CALnB,CAMI,QAAQ,CAAEjB,SANd,CAOI,cAAc,CAAEY,eAPpB,wBASI,KAAC,IAAD,CAAM,IAAN,EACI,KAAK,CAAC,WADV,CAEI,IAAI,CAAC,MAFT,CAGI,KAAK,CAAE,CAAC,CAAEM,QAAQ,CAAE,IAAZ,CAAkBC,OAAO,CAAE,eAA3B,CAAD,CAHX,uBAKI,KAAC,KAAD,EAAO,WAAW,CAAC,0DAAnB,CAAiC,UAAU,KAA3C,EALJ,EATJ,cAgBI,KAAC,IAAD,CAAM,IAAN,EAAW,UAAU,CAAE,CAAEC,EAAE,CAAE,CAACC,MAAM,CAAC,CAAR,CAAWL,IAAI,CAAE,EAAjB,CAAN,CAA4BM,EAAE,CAAE,CAACD,MAAM,CAAC,CAAR,CAAWL,IAAI,CAAE,EAAjB,CAAhC,CAAvB,uBACI,KAAC,MAAD,EAAQ,IAAI,CAAC,SAAb,CAAuB,KAAK,CAAC,OAA7B,CAAqC,QAAQ,CAAC,QAA9C,sCADJ,EAhBJ,GADJ,EADJ,CA0BH","sourcesContent":["import React, { ReactElement } from 'react'\nimport {Button, Form, Input} from \"antd\";\nimport axios from 'axios';\n\nexport default function Setting(): ReactElement {\n    const onConfirm = async (values: any) => {\n        let unit = {\n            unit: values.unit\n        }\n        axios.post('/api/setting', unit)\n            .then(response => {\n                if (response.data.success) {\n                    alert(\"유닛 이름이 세팅되었습니다.\")\n                    window.location.reload();\n                } else {\n                    alert('실패햐였습니다.')\n                }\n            })\n    };\n\n    const onConfirmFailed = (errorInfo: any) => {\n        console.log('Failed:', errorInfo);\n        alert(\"편지 보내기에 실패하셨습니다. 잠시후 다시 시도해주세요.\")\n    };\n\n    return (\n        <div>\n            <Form\n                className='form-container'\n                name=\"basic\"\n                labelCol={{ span: 5 }}\n                wrapperCol={{ span: 16 }}\n                initialValues={{ remember: true }}\n                onFinish={onConfirm}\n                onFinishFailed={onConfirmFailed}\n            >\n                <Form.Item\n                    label=\"UNIT_NAME\"\n                    name=\"unit\"\n                    rules={[{ required: true, message: '입영부대를 입력해주세요!' }]}\n                >\n                    <Input placeholder=\"입영부대를 써주세요.\" allowClear  />\n                </Form.Item>\n                <Form.Item wrapperCol={{ xs: {offset:0, span: 16}, lg: {offset:5, span: 16} }}>\n                    <Button type=\"primary\" shape=\"round\" htmlType=\"submit\">\n                        저장하기\n                    </Button>\n                </Form.Item>\n            </Form >\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}